# THIS FILE HAS BEEN AUTO-GENERATED BY THE "GRAPHCOOL DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type User implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  githubUserId: String!
  name: String!
  bio: String!
  public_repos: Int!
  public_gists: Int!
}


#
# Other Types
#

type BatchPayload {
  count: Long!
}

scalar DateTime

scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteUser(where: UserWhereUniqueInput!): User
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!
  deleteManyUsers(where: UserWhereInput!): BatchPayload!
  resetData: Boolean
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  user(where: UserWhereUniqueInput!): User
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge!]
}

input UserCreateInput {
  githubUserId: String!
  name: String!
  bio: String!
  public_repos: Int!
  public_gists: Int!
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  githubUserId_ASC
  githubUserId_DESC
  name_ASC
  name_DESC
  bio_ASC
  bio_DESC
  public_repos_ASC
  public_repos_DESC
  public_gists_ASC
  public_gists_DESC
}

input UserUpdateInput {
  githubUserId: String
  name: String
  bio: String
  public_repos: Int
  public_gists: Int
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  githubUserId: String
  githubUserId_not: String
  githubUserId_in: [String!]
  githubUserId_not_in: [String!]
  githubUserId_lt: String
  githubUserId_lte: String
  githubUserId_gt: String
  githubUserId_gte: String
  githubUserId_contains: String
  githubUserId_not_contains: String
  githubUserId_starts_with: String
  githubUserId_not_starts_with: String
  githubUserId_ends_with: String
  githubUserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  bio: String
  bio_not: String
  bio_in: [String!]
  bio_not_in: [String!]
  bio_lt: String
  bio_lte: String
  bio_gt: String
  bio_gte: String
  bio_contains: String
  bio_not_contains: String
  bio_starts_with: String
  bio_not_starts_with: String
  bio_ends_with: String
  bio_not_ends_with: String
  public_repos: Int
  public_repos_not: Int
  public_repos_in: [Int!]
  public_repos_not_in: [Int!]
  public_repos_lt: Int
  public_repos_lte: Int
  public_repos_gt: Int
  public_repos_gte: Int
  public_gists: Int
  public_gists_not: Int
  public_gists_in: [Int!]
  public_gists_not_in: [Int!]
  public_gists_lt: Int
  public_gists_lte: Int
  public_gists_gt: Int
  public_gists_gte: Int
}

input UserWhereUniqueInput {
  id: ID
  githubUserId: String
}
